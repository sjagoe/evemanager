######################################################################
# Automatically generated by qmake (2.01a) Wed 14. Nov 20:34:58 2007
######################################################################

# select the library/part to build
# Options are:
# base:     The base library that provides access to the API
#           Requires: None
# parser:   An interface to the API that also provides transaparent, asynchronous XML parsing
#           Requires: base
# base_app: A simple application that provides a GUI to test the base library
#           Requires: base
API_BUILD = base

## Set the version number
VERSION = 1.2.0

## For testing, uncomment this line:
#CONFIG += console

## Uncomment the second line to build the test app
## Comment the second line to build the library
## The first line can be left uncommented in both cases
## Note that the app requires the lib built as a dll (or .so)
#TEMPLATE = lib
#TEMPLATE = app

## Disable the ability to use the built in parsers (save on size):
#DEFINES += EVEAPI_NO_PARSING

# in the app template, only build main, and link with the dynamic library
contains( API_BUILD, base_app ) {
    TEMPLATE = app
    HEADERS += include/main.hh
    SOURCES += src/main.cpp
    LIBS += -Lbin/release -lEVE_API_Qt
    TARGET = EVE_API_Qt_base_app
}

# in the lib template, do not link to QtGui, and compile all sources _except_ main
contains ( API_BUILD, base ) {
    TEMPLATE = lib
    CONFIG += dll
    QT -= gui
    TARGET = EVE_API_Qt

    HEADERS += include/eveapi.hh \
               \
               include/eveapirequest.hh \
               include/eveapigeneralrequest.hh \
               include/eveapicharacterrequest.hh \
               \
               include/eveapiscope.hh \
               include/eveapieve.hh \
               include/eveapimap.hh \
               include/eveapicharacter.hh \
               include/eveapicorporation.hh \

    SOURCES += src/eveapi.cpp \
               \
               src/eveapirequest.cpp \
               src/eveapigeneralrequest.cpp \
               src/eveapicharacterrequest.cpp \
               \
               src/eveapiscope.cpp \
               src/eveapieve.cpp \
               src/eveapimap.cpp \
               src/eveapicharacter.cpp \
               src/eveapicorporation.cpp \
}

contains( API_BUILD, parser ) {
    TEMPLATE = lib
    CONFIG += dll
    QT -= gui
    TARGET = EVE_API_Parser_Qt
    LIBS += -Lbin/release -lEVE_API_Qt

    HEADERS += include/eveapiparser.hh \
               include/eveapiparserthread.hh \
               \
               include/eveapiparserwalkerthread.hh \
               \
               include/eveapidatatype.hh \
               \
               include/eveapidata.hh \
               include/eveapidata_walked.hh

    SOURCES += src/eveapiparser.cpp \
               src/eveapiparserthread.cpp \
               \
               src/eveapiparserwalkerthread.cpp \
               \
               src/eveapidata_walked.cpp
}

DEPENDPATH += . include src
INCLUDEPATH += . include

QT += network xml

CONFIG += thread
CONFIG += debug_and_release
CONFIG(debug, debug|release)
{
    DESTDIR = bin/debug
} else {
    DESTDIR = bin/release
}

# Input

